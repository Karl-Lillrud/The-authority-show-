name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3  # Use latest stable version of the checkout action

      - name: Set up Python
        uses: actions/setup-python@v4  # Use latest stable version of setup-python
        with:
          python-version: '3.10'

      - name: Cache Python dependencies
        uses: actions/cache@v3  # Use caching to speed up installations
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          cd src
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          cd src
          pytest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production  # Optionally specify an environment like production or staging
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1  # Azure login action (v1 is stable)
        with:
          app-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Build Docker Image (If you're using Docker)
        run: |
          docker build -t my-app-image .

      - name: Push Docker Image to Azure Container Registry (ACR)
        run: |
          docker tag my-app-image ${ACR_NAME}.azurecr.io/my-app-image:${GITHUB_SHA}
          echo ${{ secrets.AZURE_ACR_PASSWORD }} | docker login ${ACR_NAME}.azurecr.io -u ${ACR_USERNAME} --password-stdin
          docker push ${ACR_NAME}.azurecr.io/my-app-image:${GITHUB_SHA}

      - name: Deploy to Azure App Service
        run: |
          az webapp config container set --name ${AZURE_APP_NAME} --resource-group ${AZURE_RESOURCE_GROUP} --docker-custom-image-name ${ACR_NAME}.azurecr.io/my-app-image:${GITHUB_SHA}
        env: 
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
